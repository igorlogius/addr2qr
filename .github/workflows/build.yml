name: Artefact Builder
on: [push]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout 
      uses: actions/checkout@v2 
    - name: set reponame
      run: echo "::set-env name=REPONAME::$(basename `pwd`)"
    - name: set artversion
      run: echo "::set-env name=ARTVERSION::$(grep '"version"' manifest.json  | cut -d'"' -f4)"-{{
    - name: Build
      run: zip --junk-paths "$(basename `pwd`)-$(grep '"version"' manifest.json  | cut -d'"' -f4).xpi" *.js *.html *.json  *.png
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.ARTVERSION }}
        release_name: Release ${{ env.REPONAME }}-${{ env.ARTVERSION }}
        draft: false
        prerelease: false
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # pulls CREATE RELEASE, referencing it's ID to get its outputs object, includes `upload_url`. (see. https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps)
        asset_path: ./${{ env.REPONAME }}-${{ env.ARTVERSION }}.xpi
        asset_name: ${{ env.REPONAME }}-${{ env.ARTVERSION }}.xpi
        asset_content_type: application/zip
